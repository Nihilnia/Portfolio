{"ast":null,"code":"import { renderSlot as _renderSlot, createTextVNode as _createTextVNode, normalizeStyle as _normalizeStyle, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"parallax-container\",\n  ref: \"container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", {\n    class: \"parallax-card\",\n    style: _normalizeStyle($setup.parallaxStyle)\n  }, [_renderSlot(_ctx.$slots, \"default\", {}, () => [_cache[0] || (_cache[0] = _createTextVNode(\"Parallax Card Content\"))], true)], 4 /* STYLE */)], 512 /* NEED_PATCH */);\n}","map":{"version":3,"names":["class","ref","_createElementBlock","_hoisted_1","_createElementVNode","style","_normalizeStyle","$setup","parallaxStyle","_renderSlot","_ctx","$slots","_createTextVNode"],"sources":["C:\\Users\\Nihil\\Desktop\\re-licts\\src\\components\\UI\\ParallaxCard.vue"],"sourcesContent":["<template>\r\n  <div class=\"parallax-container\" ref=\"container\">\r\n    <div class=\"parallax-card\" :style=\"parallaxStyle\">\r\n      <slot>Parallax Card Content</slot>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, computed } from \"vue\";\r\nimport { useParallax } from \"@vueuse/core\";\r\n\r\nexport default {\r\n  name: \"ParallaxCard\",\r\n  setup() {\r\n    const container = ref(null);\r\n\r\n    // Use the parallax hook\r\n    const { x, y } = useParallax(container, {\r\n      scale: 0.3, // Adjust scale for smoother/slower motion\r\n    });\r\n\r\n    // Create computed styles for the card\r\n    const parallaxStyle = computed(() => ({\r\n      transform: `translate(${x.value}px, ${y.value}px)`,\r\n    }));\r\n\r\n    return {\r\n      container,\r\n      parallaxStyle,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.parallax-container {\r\n  position: relative; /* Relative positioning for the container */\r\n  height: 300px; /* Adjust to your desired container size */\r\n  width: 100%;\r\n  overflow: hidden; /* Prevent overflow of the card */\r\n  background: #f0f0f0; /* Example background */\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.parallax-card {\r\n  position: static; /* Not absolutely positioned */\r\n  background: white;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\r\n  border-radius: 8px;\r\n  padding: 20px;\r\n  transition: transform 0.1s ease-out;\r\n  will-change: transform;\r\n}\r\n</style>\r\n"],"mappings":";;EACOA,KAAK,EAAC,oBAAoB;EAACC,GAAG,EAAC;;;uBAApCC,mBAAA,CAIM,OAJNC,UAIM,GAHJC,mBAAA,CAEM;IAFDJ,KAAK,EAAC,eAAe;IAAEK,KAAK,EAFrCC,eAAA,CAEuCC,MAAA,CAAAC,aAAa;MAC9CC,WAAA,CAAkCC,IAAA,CAAAC,MAAA,iBAAlC,MAAkC,C,0BAHxCC,gBAAA,CAGY,uBAAqB,G","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}