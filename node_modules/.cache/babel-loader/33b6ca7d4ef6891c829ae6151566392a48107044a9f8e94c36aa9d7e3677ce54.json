{"ast":null,"code":"import { ref, reactive, computed } from \"vue\";\nexport default {\n  name: \"BaseParallax\",\n  props: {\n    title: {\n      type: String,\n      required: true\n    },\n    description: {\n      type: String,\n      required: true\n    }\n  },\n  setup(props) {\n    const cardRef = ref(null);\n    const rotation = reactive({\n      rotateX: 0,\n      rotateY: 0,\n      translateZ: 0\n    });\n    const cardStyle = computed(() => ({\n      transform: `perspective(1000px) rotateX(${rotation.rotateX}deg) rotateY(${rotation.rotateY}deg) translateZ(${rotation.translateZ}px)`,\n      backgroundSize: \"cover\",\n      backgroundPosition: \"center\"\n    }));\n    const handleMouseMove = event => {\n      if (!cardRef.value) return;\n      const card = cardRef.value;\n      const {\n        left,\n        top,\n        width,\n        height\n      } = card.getBoundingClientRect();\n      const centerX = left + width / 2;\n      const centerY = top + height / 2;\n      const mouseX = event.clientX - centerX;\n      const mouseY = event.clientY - centerY;\n      rotation.rotateX = -(mouseY / height) * 20; // Max rotation of 20 degrees\n      rotation.rotateY = mouseX / width * 20;\n      rotation.translateZ = 50;\n    };\n    const handleMouseLeave = () => {\n      rotation.rotateX = 0;\n      rotation.rotateY = 0;\n      rotation.translateZ = 0;\n    };\n    return {\n      cardRef,\n      cardStyle,\n      handleMouseMove,\n      handleMouseLeave,\n      props\n    };\n  }\n};","map":{"version":3,"names":["ref","reactive","computed","name","props","title","type","String","required","description","setup","cardRef","rotation","rotateX","rotateY","translateZ","cardStyle","transform","backgroundSize","backgroundPosition","handleMouseMove","event","value","card","left","top","width","height","getBoundingClientRect","centerX","centerY","mouseX","clientX","mouseY","clientY","handleMouseLeave"],"sources":["C:\\Users\\Nihil\\Desktop\\re-licts\\src\\components\\UI\\BaseParallax.vue"],"sourcesContent":["<template>\r\n  <div class=\"flex items-center justify-center min-h-screen bg-gray-100\">\r\n    <div\r\n      ref=\"cardRef\"\r\n      class=\"w-[600px] h-[800px] rounded-xl overflow-hidden transition-all duration-200 ease-out shadow-xl\"\r\n      :style=\"cardStyle\"\r\n      @mousemove=\"handleMouseMove\"\r\n      @mouseleave=\"handleMouseLeave\"\r\n    >\r\n      <div\r\n        class=\"h-full flex flex-col justify-end p-6 bg-gradient-to-t from-black/60 to-transparent\"\r\n      >\r\n        <h2 class=\"text-2xl font-bold text-white mb-2\">{{ title }}</h2>\r\n        <p class=\"text-white mb-4\">{{ description }}</p>\r\n        <button\r\n          class=\"bg-white text-black font-semibold py-2 px-4 rounded hover:bg-gray-200 transition-colors duration-200\"\r\n        >\r\n          Learn More\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, reactive, computed } from \"vue\";\r\n\r\nexport default {\r\n  name: \"BaseParallax\",\r\n  props: {\r\n    title: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n    description: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n  },\r\n  setup(props) {\r\n    const cardRef = ref(null);\r\n    const rotation = reactive({ rotateX: 0, rotateY: 0, translateZ: 0 });\r\n\r\n    const cardStyle = computed(() => ({\r\n      transform: `perspective(1000px) rotateX(${rotation.rotateX}deg) rotateY(${rotation.rotateY}deg) translateZ(${rotation.translateZ}px)`,\r\n      backgroundSize: \"cover\",\r\n      backgroundPosition: \"center\",\r\n    }));\r\n\r\n    const handleMouseMove = (event) => {\r\n      if (!cardRef.value) return;\r\n\r\n      const card = cardRef.value;\r\n      const { left, top, width, height } = card.getBoundingClientRect();\r\n      const centerX = left + width / 2;\r\n      const centerY = top + height / 2;\r\n      const mouseX = event.clientX - centerX;\r\n      const mouseY = event.clientY - centerY;\r\n\r\n      rotation.rotateX = -(mouseY / height) * 20; // Max rotation of 20 degrees\r\n      rotation.rotateY = (mouseX / width) * 20;\r\n      rotation.translateZ = 50;\r\n    };\r\n\r\n    const handleMouseLeave = () => {\r\n      rotation.rotateX = 0;\r\n      rotation.rotateY = 0;\r\n      rotation.translateZ = 0;\r\n    };\r\n\r\n    return {\r\n      cardRef,\r\n      cardStyle,\r\n      handleMouseMove,\r\n      handleMouseLeave,\r\n      props,\r\n    };\r\n  },\r\n};\r\n</script>\r\n"],"mappings":"AAyBA,SAASA,GAAG,EAAEC,QAAQ,EAAEC,QAAO,QAAS,KAAK;AAE7C,eAAe;EACbC,IAAI,EAAE,cAAc;EACpBC,KAAK,EAAE;IACLC,KAAK,EAAE;MACLC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ,CAAC;IACDC,WAAW,EAAE;MACXH,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDE,KAAKA,CAACN,KAAK,EAAE;IACX,MAAMO,OAAM,GAAIX,GAAG,CAAC,IAAI,CAAC;IACzB,MAAMY,QAAO,GAAIX,QAAQ,CAAC;MAAEY,OAAO,EAAE,CAAC;MAAEC,OAAO,EAAE,CAAC;MAAEC,UAAU,EAAE;IAAE,CAAC,CAAC;IAEpE,MAAMC,SAAQ,GAAId,QAAQ,CAAC,OAAO;MAChCe,SAAS,EAAE,+BAA+BL,QAAQ,CAACC,OAAO,gBAAgBD,QAAQ,CAACE,OAAO,mBAAmBF,QAAQ,CAACG,UAAU,KAAK;MACrIG,cAAc,EAAE,OAAO;MACvBC,kBAAkB,EAAE;IACtB,CAAC,CAAC,CAAC;IAEH,MAAMC,eAAc,GAAKC,KAAK,IAAK;MACjC,IAAI,CAACV,OAAO,CAACW,KAAK,EAAE;MAEpB,MAAMC,IAAG,GAAIZ,OAAO,CAACW,KAAK;MAC1B,MAAM;QAAEE,IAAI;QAAEC,GAAG;QAAEC,KAAK;QAAEC;MAAO,IAAIJ,IAAI,CAACK,qBAAqB,CAAC,CAAC;MACjE,MAAMC,OAAM,GAAIL,IAAG,GAAIE,KAAI,GAAI,CAAC;MAChC,MAAMI,OAAM,GAAIL,GAAE,GAAIE,MAAK,GAAI,CAAC;MAChC,MAAMI,MAAK,GAAIV,KAAK,CAACW,OAAM,GAAIH,OAAO;MACtC,MAAMI,MAAK,GAAIZ,KAAK,CAACa,OAAM,GAAIJ,OAAO;MAEtClB,QAAQ,CAACC,OAAM,GAAI,EAAEoB,MAAK,GAAIN,MAAM,IAAI,EAAE,EAAE;MAC5Cf,QAAQ,CAACE,OAAM,GAAKiB,MAAK,GAAIL,KAAK,GAAI,EAAE;MACxCd,QAAQ,CAACG,UAAS,GAAI,EAAE;IAC1B,CAAC;IAED,MAAMoB,gBAAe,GAAIA,CAAA,KAAM;MAC7BvB,QAAQ,CAACC,OAAM,GAAI,CAAC;MACpBD,QAAQ,CAACE,OAAM,GAAI,CAAC;MACpBF,QAAQ,CAACG,UAAS,GAAI,CAAC;IACzB,CAAC;IAED,OAAO;MACLJ,OAAO;MACPK,SAAS;MACTI,eAAe;MACfe,gBAAgB;MAChB/B;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}