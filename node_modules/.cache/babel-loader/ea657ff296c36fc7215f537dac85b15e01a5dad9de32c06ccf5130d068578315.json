{"ast":null,"code":"import { ref, computed } from \"vue\";\nimport { useParallax } from \"@vueuse/core\";\n\n// Props for dynamic configuration\n\nexport default {\n  __name: 'ParallaxCard',\n  props: {\n    title: {\n      type: String,\n      default: \"Parallax Title\"\n    },\n    description: {\n      type: String,\n      default: \"Parallax Description\"\n    },\n    strength: {\n      type: Number,\n      default: 20 // Control the intensity of the parallax effect\n    }\n  },\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const props = __props;\n    const container = ref(null);\n    const {\n      tilt,\n      roll\n    } = useParallax(container);\n\n    // Calculate parallax style dynamically\n    const parallaxStyle = computed(() => ({\n      transform: `translateX(${tilt.value * props.strength}px) translateY(${roll.value * props.strength}px)`\n    }));\n    const __returned__ = {\n      props,\n      container,\n      tilt,\n      roll,\n      parallaxStyle,\n      ref,\n      computed,\n      get useParallax() {\n        return useParallax;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","useParallax","props","__props","container","tilt","roll","parallaxStyle","transform","value","strength"],"sources":["C:/Users/Nihil/Desktop/re-licts/src/components/UI/ParallaxCard.vue"],"sourcesContent":["<template>\r\n  <div ref=\"container\" class=\"parallax-container\">\r\n    <div class=\"parallax-content\" :style=\"parallaxStyle\">\r\n      <!-- Your content here -->\r\n      <h2>{{ title }}</h2>\r\n      <p>{{ description }}</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed } from \"vue\";\r\nimport { useParallax } from \"@vueuse/core\";\r\n\r\n// Props for dynamic configuration\r\nconst props = defineProps({\r\n  title: {\r\n    type: String,\r\n    default: \"Parallax Title\",\r\n  },\r\n  description: {\r\n    type: String,\r\n    default: \"Parallax Description\",\r\n  },\r\n  strength: {\r\n    type: Number,\r\n    default: 20, // Control the intensity of the parallax effect\r\n  },\r\n});\r\n\r\nconst container = ref(null);\r\nconst { tilt, roll } = useParallax(container);\r\n\r\n// Calculate parallax style dynamically\r\nconst parallaxStyle = computed(() => ({\r\n  transform: `translateX(${tilt.value * props.strength}px) translateY(${\r\n    roll.value * props.strength\r\n  }px)`,\r\n}));\r\n</script>\r\n\r\n<style scoped>\r\n.parallax-container {\r\n  perspective: 1000px;\r\n  overflow: hidden;\r\n  position: relative;\r\n  width: 100%;\r\n  height: 400px; /* Adjustable height */\r\n  background: #f5f5f5; /* Fallback background color */\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.parallax-content {\r\n  transition: transform 0.2s ease-out; /* Smooth easing */\r\n  will-change: transform;\r\n  padding: 20px;\r\n  background: white;\r\n  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);\r\n  border-radius: 8px;\r\n}\r\n</style>\r\n"],"mappings":"AAWA,SAASA,GAAG,EAAEC,QAAQ,QAAQ,KAAK;AACnC,SAASC,WAAW,QAAQ,cAAc;;AAE1C;;;;;;;;;;;;;;;;;;;;;;IACA,MAAMC,KAAK,GAAGC,OAaZ;IAEF,MAAMC,SAAS,GAAGL,GAAG,CAAC,IAAI,CAAC;IAC3B,MAAM;MAAEM,IAAI;MAAEC;IAAK,CAAC,GAAGL,WAAW,CAACG,SAAS,CAAC;;IAE7C;IACA,MAAMG,aAAa,GAAGP,QAAQ,CAAC,OAAO;MACpCQ,SAAS,EAAE,cAAcH,IAAI,CAACI,KAAK,GAAGP,KAAK,CAACQ,QAAQ,kBAClDJ,IAAI,CAACG,KAAK,GAAGP,KAAK,CAACQ,QAAQ;IAE/B,CAAC,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}