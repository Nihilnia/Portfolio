{"ast":null,"code":"import { createElementVNode as _createElementVNode, normalizeStyle as _normalizeStyle, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"div\", {\n    ref: \"cardRef\",\n    class: \"pc\",\n    style: _normalizeStyle($setup.cardStyle),\n    onMousemove: $setup.handleMouseMove,\n    onMouseleave: $setup.handleMouseLeave\n  }, _cache[0] || (_cache[0] = [_createElementVNode(\"div\", null, [_createElementVNode(\"h2\", null, \"Parallax Card\"), _createElementVNode(\"p\", null, \"Hover over me to see the parallax effect!\")], -1 /* HOISTED */)]), 36 /* STYLE, NEED_HYDRATION */)]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","ref","class","style","_normalizeStyle","$setup","cardStyle","onMousemove","handleMouseMove","onMouseleave","handleMouseLeave"],"sources":["C:\\Users\\Nihil\\Desktop\\re-licts\\src\\components\\UI\\ParallaxCard.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div\r\n      ref=\"cardRef\"\r\n      class=\"pc\"\r\n      :style=\"cardStyle\"\r\n      @mousemove=\"handleMouseMove\"\r\n      @mouseleave=\"handleMouseLeave\"\r\n    >\r\n      <div>\r\n        <h2>Parallax Card</h2>\r\n        <p>Hover over me to see the parallax effect!</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, reactive, computed } from \"vue\";\r\n\r\nconst cardRef = ref(null);\r\nconst rotation = reactive({ rotateX: 0, rotateY: 0, translateZ: 0 });\r\n\r\nconst cardStyle = computed(() => ({\r\n  transform: `perspective(1000px) rotateX(${rotation.rotateX}deg) rotateY(${rotation.rotateY}deg) translateZ(${rotation.translateZ}px)`,\r\n  backgroundImage: `url(${require(\"@/assets/pics/a.jpg\")})`,\r\n  backgroundSize: \"cover\",\r\n  backgroundPosition: \"center\",\r\n}));\r\n\r\nconst handleMouseMove = (event) => {\r\n  if (!cardRef.value) return;\r\n\r\n  const card = cardRef.value;\r\n  const { left, top, width, height } = card.getBoundingClientRect();\r\n  const centerX = left + width / 2;\r\n  const centerY = top + height / 2;\r\n  const mouseX = event.clientX - centerX;\r\n  const mouseY = event.clientY - centerY;\r\n\r\n  rotation.rotateX = -(mouseY / height) * 20; // Max rotation of 20 degrees\r\n  rotation.rotateY = (mouseX / width) * 20;\r\n  rotation.translateZ = 50;\r\n};\r\n\r\nconst handleMouseLeave = () => {\r\n  rotation.rotateX = 0;\r\n  rotation.rotateY = 0;\r\n  rotation.translateZ = 0;\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.pc {\r\n  height: 500px;\r\n  border-radius: 10px;\r\n}\r\n\r\n.pc > div {\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n}\r\n</style>\r\n"],"mappings":";;uBACEA,mBAAA,CAaM,cAZJC,mBAAA,CAWM;IAVJC,GAAG,EAAC,SAAS;IACbC,KAAK,EAAC,IAAI;IACTC,KAAK,EALZC,eAAA,CAKcC,MAAA,CAAAC,SAAS;IAChBC,WAAS,EAAEF,MAAA,CAAAG,eAAe;IAC1BC,YAAU,EAAEJ,MAAA,CAAAK;gCAEbV,mBAAA,CAGM,cAFJA,mBAAA,CAAsB,YAAlB,eAAa,GACjBA,mBAAA,CAAgD,WAA7C,2CAAyC,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}