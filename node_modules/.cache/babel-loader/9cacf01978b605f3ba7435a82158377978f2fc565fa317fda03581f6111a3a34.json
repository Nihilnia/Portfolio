{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"typewriter\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"h1\", _hoisted_1, [_createTextVNode(_toDisplayString(_ctx.displayedTitle), 1), _cache[0] || (_cache[0] = _createElementVNode(\"span\", {\n    class: \"cursor\"\n  }, \"|\", -1))]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createTextVNode","_toDisplayString","_ctx","displayedTitle","_createElementVNode"],"sources":["C:\\Users\\Nihil\\Desktop\\aaa\\Portfolio\\src\\components\\UI\\BaseTitle.vue"],"sourcesContent":["<template>\r\n  <h1 class=\"typewriter\">{{ displayedTitle }}<span class=\"cursor\">|</span></h1>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n  defineComponent,\r\n  ref,\r\n  watch,\r\n  onMounted,\r\n  onUnmounted,\r\n  nextTick,\r\n} from \"vue\";\r\n\r\nexport default defineComponent({\r\n  props: {\r\n    title: {\r\n      type: String,\r\n      default: \"Default value\",\r\n    },\r\n  },\r\n  setup(props) {\r\n    const displayedTitle = ref(\"\");\r\n    let interval = null;\r\n\r\n    const typeTitle = () => {\r\n      const title = props.title ? String(props.title) : \"Default value\";\r\n      if (title === \"\") return;\r\n      if (interval) clearInterval(interval);\r\n      displayedTitle.value = \"\";\r\n      let i = 0;\r\n      interval = setInterval(() => {\r\n        if (i < title.length) {\r\n          displayedTitle.value += title[i];\r\n          i++;\r\n        } else {\r\n          clearInterval(interval);\r\n          interval = null;\r\n        }\r\n      }, 100);\r\n    };\r\n\r\n    watch(\r\n      () => props.title,\r\n      (newTitle) => {\r\n        console.log(\"New title:\", newTitle);\r\n        nextTick(() => {\r\n          typeTitle();\r\n        });\r\n      }\r\n    );\r\n\r\n    onMounted(() => {\r\n      nextTick(() => {\r\n        typeTitle();\r\n      });\r\n    });\r\n\r\n    onUnmounted(() => {\r\n      if (interval) clearInterval(interval);\r\n    });\r\n\r\n    return {\r\n      displayedTitle,\r\n    };\r\n  },\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.typewriter {\r\n  font-size: 70px;\r\n  text-align: center;\r\n}\r\n\r\n.cursor {\r\n  animation: blink 0.7s infinite;\r\n}\r\n\r\n@keyframes blink {\r\n  0% {\r\n    opacity: 0;\r\n  }\r\n  50% {\r\n    opacity: 1;\r\n  }\r\n  100% {\r\n    opacity: 0;\r\n  }\r\n}\r\n</style>\r\n"],"mappings":";;EACMA,KAAK,EAAC;AAAY;;uBAAtBC,mBAAA,CAA6E,MAA7EC,UAA6E,GAD/EC,gBAAA,CAAAC,gBAAA,CAC4BC,IAAA,CAAAC,cAAc,O,0BAAGC,mBAAA,CAA6B;IAAvBP,KAAK,EAAC;EAAQ,GAAC,GAAC,O","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}