{"ast":null,"code":"import { ref, reactive, computed } from \"vue\";\nexport default {\n  __name: 'BaseParallax',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const cardRef = ref(null);\n    const rotation = reactive({\n      rotateX: 0,\n      rotateY: 0,\n      translateZ: 0\n    });\n    const cardStyle = computed(() => ({\n      transform: `perspective(1000px) rotateX(${rotation.rotateX}deg) rotateY(${rotation.rotateY}deg) translateZ(${rotation.translateZ}px)`,\n      backgroundImage: `url(${require(\"@/assets/parallaxCardIMG.jpg\")})`,\n      backgroundSize: \"cover\",\n      backgroundPosition: \"center\"\n    }));\n    const handleMouseMove = event => {\n      if (!cardRef.value) return;\n      const card = cardRef.value;\n      const {\n        left,\n        top,\n        width,\n        height\n      } = card.getBoundingClientRect();\n      const centerX = left + width / 2;\n      const centerY = top + height / 2;\n      const mouseX = event.clientX - centerX;\n      const mouseY = event.clientY - centerY;\n      rotation.rotateX = -(mouseY / height) * 20; // Max rotation of 20 degrees\n      rotation.rotateY = mouseX / width * 20;\n      rotation.translateZ = 50;\n    };\n    const handleMouseLeave = () => {\n      rotation.rotateX = 0;\n      rotation.rotateY = 0;\n      rotation.translateZ = 0;\n    };\n    const __returned__ = {\n      cardRef,\n      rotation,\n      cardStyle,\n      handleMouseMove,\n      handleMouseLeave,\n      ref,\n      reactive,\n      computed\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","reactive","computed","cardRef","rotation","rotateX","rotateY","translateZ","cardStyle","transform","backgroundImage","require","backgroundSize","backgroundPosition","handleMouseMove","event","value","card","left","top","width","height","getBoundingClientRect","centerX","centerY","mouseX","clientX","mouseY","clientY","handleMouseLeave"],"sources":["C:/Users/Nihil/Desktop/re-licts/src/components/UI/BaseParallax.vue"],"sourcesContent":["<template>\r\n  <div class=\"flex items-center justify-center min-h-screen bg-gray-100\">\r\n    <div\r\n      ref=\"cardRef\"\r\n      class=\"w-[600px] h-[800px] rounded-xl overflow-hidden transition-all duration-200 ease-out shadow-xl\"\r\n      :style=\"cardStyle\"\r\n      @mousemove=\"handleMouseMove\"\r\n      @mouseleave=\"handleMouseLeave\"\r\n    >\r\n      <div\r\n        class=\"h-full flex flex-col justify-end p-6 bg-gradient-to-t from-black/60 to-transparent\"\r\n      >\r\n        <h2 class=\"text-2xl font-bold text-white mb-2\">Parallax Card</h2>\r\n        <p class=\"text-white mb-4\">Hover over me to see the parallax effect!</p>\r\n        <button\r\n          class=\"bg-white text-black font-semibold py-2 px-4 rounded hover:bg-gray-200 transition-colors duration-200\"\r\n        >\r\n          Learn More\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, reactive, computed } from \"vue\";\r\n\r\nconst cardRef = ref(null);\r\nconst rotation = reactive({ rotateX: 0, rotateY: 0, translateZ: 0 });\r\n\r\nconst cardStyle = computed(() => ({\r\n  transform: `perspective(1000px) rotateX(${rotation.rotateX}deg) rotateY(${rotation.rotateY}deg) translateZ(${rotation.translateZ}px)`,\r\n  backgroundImage: `url(${require(\"@/assets/parallaxCardIMG.jpg\")})`,\r\n  backgroundSize: \"cover\",\r\n  backgroundPosition: \"center\",\r\n}));\r\n\r\nconst handleMouseMove = (event) => {\r\n  if (!cardRef.value) return;\r\n\r\n  const card = cardRef.value;\r\n  const { left, top, width, height } = card.getBoundingClientRect();\r\n  const centerX = left + width / 2;\r\n  const centerY = top + height / 2;\r\n  const mouseX = event.clientX - centerX;\r\n  const mouseY = event.clientY - centerY;\r\n\r\n  rotation.rotateX = -(mouseY / height) * 20; // Max rotation of 20 degrees\r\n  rotation.rotateY = (mouseX / width) * 20;\r\n  rotation.translateZ = 50;\r\n};\r\n\r\nconst handleMouseLeave = () => {\r\n  rotation.rotateX = 0;\r\n  rotation.rotateY = 0;\r\n  rotation.translateZ = 0;\r\n};\r\n</script>\r\n"],"mappings":"AAyBA,SAASA,GAAG,EAAEC,QAAQ,EAAEC,QAAQ,QAAQ,KAAK;;;;;;;IAE7C,MAAMC,OAAO,GAAGH,GAAG,CAAC,IAAI,CAAC;IACzB,MAAMI,QAAQ,GAAGH,QAAQ,CAAC;MAAEI,OAAO,EAAE,CAAC;MAAEC,OAAO,EAAE,CAAC;MAAEC,UAAU,EAAE;IAAE,CAAC,CAAC;IAEpE,MAAMC,SAAS,GAAGN,QAAQ,CAAC,OAAO;MAChCO,SAAS,EAAE,+BAA+BL,QAAQ,CAACC,OAAO,gBAAgBD,QAAQ,CAACE,OAAO,mBAAmBF,QAAQ,CAACG,UAAU,KAAK;MACrIG,eAAe,EAAE,OAAOC,OAAO,CAAC,8BAA8B,CAAC,GAAG;MAClEC,cAAc,EAAE,OAAO;MACvBC,kBAAkB,EAAE;IACtB,CAAC,CAAC,CAAC;IAEH,MAAMC,eAAe,GAAIC,KAAK,IAAK;MACjC,IAAI,CAACZ,OAAO,CAACa,KAAK,EAAE;MAEpB,MAAMC,IAAI,GAAGd,OAAO,CAACa,KAAK;MAC1B,MAAM;QAAEE,IAAI;QAAEC,GAAG;QAAEC,KAAK;QAAEC;MAAO,CAAC,GAAGJ,IAAI,CAACK,qBAAqB,CAAC,CAAC;MACjE,MAAMC,OAAO,GAAGL,IAAI,GAAGE,KAAK,GAAG,CAAC;MAChC,MAAMI,OAAO,GAAGL,GAAG,GAAGE,MAAM,GAAG,CAAC;MAChC,MAAMI,MAAM,GAAGV,KAAK,CAACW,OAAO,GAAGH,OAAO;MACtC,MAAMI,MAAM,GAAGZ,KAAK,CAACa,OAAO,GAAGJ,OAAO;MAEtCpB,QAAQ,CAACC,OAAO,GAAG,EAAEsB,MAAM,GAAGN,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC;MAC5CjB,QAAQ,CAACE,OAAO,GAAImB,MAAM,GAAGL,KAAK,GAAI,EAAE;MACxChB,QAAQ,CAACG,UAAU,GAAG,EAAE;IAC1B,CAAC;IAED,MAAMsB,gBAAgB,GAAGA,CAAA,KAAM;MAC7BzB,QAAQ,CAACC,OAAO,GAAG,CAAC;MACpBD,QAAQ,CAACE,OAAO,GAAG,CAAC;MACpBF,QAAQ,CAACG,UAAU,GAAG,CAAC;IACzB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}