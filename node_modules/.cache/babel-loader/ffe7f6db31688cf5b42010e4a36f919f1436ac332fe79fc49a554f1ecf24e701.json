{"ast":null,"code":"import { toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"h1\", null, _toDisplayString($data.displayedTitle), 1 /* TEXT */);\n}","map":{"version":3,"names":["_createElementBlock","_toDisplayString","$data","displayedTitle"],"sources":["C:\\Users\\Nihil\\Desktop\\re-licts\\src\\components\\UI\\BaseTitle.vue"],"sourcesContent":["<template>\r\n  <h1>{{ displayedTitle }}</h1>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: {\r\n    title: {\r\n      type: String,\r\n      default: \"abc\", // Provide a default value to avoid null\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      displayedTitle: \"\", // Holds the progressively typed title\r\n    };\r\n  },\r\n  mounted() {\r\n    if (this.title) {\r\n      this.typeWriterEffect(this.title); // Start typewriter effect only if title is not null or empty\r\n    }\r\n  },\r\n  methods: {\r\n    typeWriterEffect(text) {\r\n      if (!text) return; // Exit if text is null or undefined\r\n      let index = 0;\r\n      const typingSpeed = 100; // Adjust typing speed (in milliseconds)\r\n\r\n      const type = () => {\r\n        if (index < text.length) {\r\n          this.displayedTitle += text[index];\r\n          index++;\r\n          setTimeout(type, typingSpeed); // Schedule next character\r\n        }\r\n      };\r\n\r\n      type();\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\nh1 {\r\n  text-align: center;\r\n  font-size: 70px;\r\n}\r\n</style>\r\n"],"mappings":";;uBACEA,mBAAA,CAA6B,YAAAC,gBAAA,CAAtBC,KAAA,CAAAC,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}